# ---------------------------------
# All merged (with inline environment vars, no .env needed)
#----------------------------------

services:
  atomspace-api:
    build:
      context: ./custom-atomspace-builder
      dockerfile: Dockerfile
    container_name: atomspace-api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=7687
      - NEO4J_BOLT_PORT=7687
      - HUGEGRAPH_HOST=hugegraph-atomspace
      - HUGEGRAPH_PORT=8080
      - HUGEGRAPH_GRAPH=hugegraph
      - ANNOTATION_SERVICE_URL=http://annotation_service:5800/annotation/load
      - API_PORT=8000
    volumes:
      - ./custom-atomspace-builder/output:/app/output
      - ./custom-atomspace-builder/config.yaml:/app/config.yaml
      - atomspace_logs:/app/logs
      - shared_output:/shared/output
    depends_on:
      neo4j:
        condition: service_healthy
      hugegraph:
        condition: service_started
    networks:
      - atomspace-network
    restart: always

  neo4j:
    image: neo4j:5.15.0
    container_name: neo4j-atomspace
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/atomspace123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_dbms_security_allow__csv__import__from__file__urls=true
      - NEO4J_server_directories_import=/var/lib/neo4j/import
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_memory_pagecache_size=512m
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_server_default__listen__address=0.0.0.0
      - NEO4J_HTTP_PORT=7474
      - NEO4J_BOLT_PORT=7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=atomspace123
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - shared_output:/var/lib/neo4j/import/shared/output
      - neo4j_plugins:/plugins
    networks:
      - atomspace-network
    restart: unless-stopped
    healthcheck:
      test:
        ["CMD", "cypher-shell", "-u", "neo4j", "-p", "atomspace123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  hugegraph:
    image: hugegraph/hugegraph:1.5.0
    container_name: hugegraph-atomspace
    ports:
      - "8080:8080"
      - "8182:8182"
    environment:
      - HUGEGRAPH_CONF=/hugegraph/conf
    volumes:
      - hugegraph_data:/hugegraph/data
      - hugegraph_logs:/hugegraph/logs
    networks:
      - atomspace-network
    restart: unless-stopped

  # Annotation Query Backend General
  annotation_service:
    build:
      context: ./annotation-query-backend-general
      dockerfile: Dockerfile
    container_name: annotation_service
    volumes:
      - ./annotation-query-backend-general:/app
      - ./custom-atomspace-builder/output:/shared/output
    ports:
      - "5800:5800"
    command: python run.py
    restart: always
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGO_URI=mongodb://mongodb:27017/annotation
      - APP_PORT=5800
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - REDIS_EXPIRATION=3600
      - MORK_URL=http://mork:8231
      - NEO4J_URL=http://neo4j:7474
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=atomspace123
    networks:
      - atomspace-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27021:27017"
    restart: always
    networks:
      - atomspace-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - atomspace-network

  annotation-tool:
    build:
      context: ./annotation-tool
      dockerfile: dockerfile
    container_name: annotation-tool
    environment:
      - LOADER_URL=http://127.0.0.1:8000
      - ANNOTATION_URL=http://127.0.0.1:5800
    ports:
      - "3000:3000"
    depends_on:
      - atomspace-api
      - annotation_service
    network_mode: host
    restart: always

  mork:
    build:
      context: ./MORK
      dockerfile: Dockerfile
    container_name: mork_pathmap
    volumes:
      - ./MORK:/app # local code bind mount
      - ./custom-atomspace-builder/output:/shared/output # shared volume
    ports:
      - "8231:8231"
    networks:
      - atomspace-network
    restart: always

volumes:
  # Custom Atomspace Builder
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  hugegraph_data:
  hugegraph_logs:
  atomspace_logs:
  shared_output:
  # Annotation Query Backend General
  mongo_data:
  redis_data:

networks:
  atomspace-network:
    driver: bridge
